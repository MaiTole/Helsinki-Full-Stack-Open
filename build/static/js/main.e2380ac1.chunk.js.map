{"version":3,"sources":["components/Search.js","services/persons.js","components/Newentry.js","components/Phonebooklist.js","components/Notification.js","App.js","index.js"],"names":["Search","searchFilter","handleFilterChange","name","value","onChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Newentry","nameinput","numberinput","namehandler","numhandler","type","Phonebooklist","list","handleDeletion","searchresult","filter","pax","includes","map","number","onClick","Notification","message","className","App","useState","persons","setPersons","newName","newNumber","newEntry","setNewEntry","setFilter","errormessage","setErrorMessage","useEffect","serviceList","initialpersonslist","event","target","onSubmit","preventDefault","nameObject","idtoupdate","newEntryState","window","alert","confirm","returnedentry","setTimeout","catch","error","returnedEntry","concat","console","log","JSON","stringify","Object","values","idtoremove","returnedlist","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2380ac1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Search = ({searchFilter, handleFilterChange}) => {\n  return (\n    <>\n    <div>\n      Filter shown with: <input name='search' value={searchFilter} onChange={handleFilterChange} />\n    </div>\n    <br />\n    </>\n  )\n}\n\nexport default Search","import axios from 'axios'\n//const baseUrl = 'http://localhost:3004/persons'\nconst baseUrl = 'https://guarded-tundra-98399.herokuapp.com/api/persons' //'http://localhost:3001/api/persons'\n\nconst getall = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getall, create, update, remove }","import React from 'react'\n\nconst Newentry = ({nameinput, numberinput, namehandler, numhandler}) => {\n  return (\n    <>\n    <div>\n      Name: <input name='newName' value={nameinput} onChange={namehandler}/>\n      Number: <input name='newNumber' value={numberinput} onChange={numhandler}/>\n    </div>\n    <div>\n      <br />\n      <button type='submit'>Add New</button>\n    </div>\n    </>\n)\n}\n\nexport default Newentry","import React from 'react'\n\nconst Phonebooklist = ({list, handleDeletion, searchFilter}) => {\n  const searchresult = list.filter(pax => pax.name.includes(searchFilter))\n  if (searchFilter === '') {\n    return (\n      <>\n      {list.map(pax => <ul key={pax.id}> {pax.name} {pax.number} <button onClick={handleDeletion} name={pax.name} id={pax.id}> Delete </button></ul>)}\n      </>\n    )\n  }\n  else {\n    return (\n      <>\n      {searchresult.map(pax => <ul key={pax.id}> {pax.name} {pax.number} <button onClick={handleDeletion} name={pax.name} id={pax.id}> Delete </button></ul>)}\n      </>\n    )\n  }\n}\nexport default Phonebooklist","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport serviceList from './services/persons'\nimport Newentry from './components/Newentry'\nimport Phonebooklist from './components/Phonebooklist'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newEntry, setNewEntry] = useState({newName: 'Emma Doe', newNumber: 88888888})\n  const [searchFilter, setFilter] = useState('')\n  const [errormessage, setErrorMessage] = useState(null)\n  \n  useEffect(() => {\n    serviceList\n    .getall()\n    .then(initialpersonslist => {setPersons(initialpersonslist)})\n  },[persons])\n\n  // Function to check if name exists in phonebook, and add entry to phonebook if not\n  const addEntry = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newEntry.newName,\n      number: newEntry.newNumber\n    }\n    const paxtoupdate = persons.filter(pax => pax.name.includes(newEntry.newName))\n    const idtoupdate = paxtoupdate.map(pax => pax.id)\n    const newEntryState = { newName: '', newNumber: '' }\n\n    // Check and reject if any empty fields in Name/Number\n    if (newEntry.newName === '') {\n      window.alert(`Please enter a valid name`)\n    }\n    else if (newEntry.newNumber === '') {\n      window.alert(`Please enter a valid number`)\n    }\n    //Check if entry exists and alert user if so - deny duplicate entries\n    else if ((persons.map(pax=>pax.name)).includes(newEntry.newName) & (persons.map(pax=>pax.number)).includes(newEntry.newNumber)) {\n      window.alert(`${newEntry.newName} already exists in phonebook`)\n      setNewEntry(newEntryState)\n    }\n    //Check if entry exists and number has changed - if so prompt for user confirmed before updating number in phonebook\n    else if ((persons.map(pax=>pax.name)).includes(newEntry.newName)) {\n      window.confirm(`${newEntry.newName} already exists in phonebook, would you like to replace the old number with a new one?`)\n      serviceList\n      .update(idtoupdate, nameObject)\n      .then(returnedentry => {\n        setPersons(persons.filter(pax => pax.id !== idtoupdate ? pax : returnedentry))\n        setErrorMessage(`${newEntry.newName}'s number was successfully updated`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setNewEntry(newEntryState)\n      })\n      .catch(error => {\n        setErrorMessage(`Unable to perform operation as ${newEntry.newName}'s contact has already been deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      })\n\n    }\n    else {\n      serviceList\n      .create(nameObject)\n      .then(\n        returnedEntry => {\n        setPersons(persons.concat(returnedEntry))\n        setErrorMessage(`${newEntry.newName}'s contact was successfully added`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setNewEntry(newEntryState)\n        }\n      )\n      .catch(error => {\n        const err = console.log(error.response.data)\n        setErrorMessage(JSON.stringify(Object.values(error.response.data)[0]))\n      })   \n    }\n  }\n\n  // Function to handle input new name for addition to phonebook\n  const handleNameChange = (event) => { \n  setNewEntry({...newEntry, newName: event.target.value});\n  }\n  // Function to handle input new number for addition to phonebook\n  const handleNumberChange = (event) => { \n    setNewEntry({...newEntry, newNumber: event.target.value});\n  }\n  //Function to handle search filter on phonebook entries\n  const handleFilterChange = (event) => {\n     setFilter(event.target.value)\n  }\n\n  const handleDeletion = (event) => {\n    const idtoremove = event.target.id\n    if (window.confirm(`Do you want to delete ${event.target.name}'s contact?`) === true) {\n      serviceList\n      .remove(idtoremove) \n      .then(returnedlist => {\n        setPersons(persons.filter((person)=> person.id !== idtoremove))\n        setErrorMessage(`${event.target.name}'s contact was successfully deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      }\n      )\n      .catch(error => {\n        setErrorMessage(`Unable to perform operation as ${newEntry.newName}'s contact has already been deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      })\n    }\n  }\n\nreturn (\n<div>\n  <h2>Phonebook</h2>\n  <form > \n  <Search searchFilter={searchFilter} handleFilterChange={handleFilterChange}/>\n  </form>\n  <Notification message={errormessage} />\n  <h2> Add a New Entry</h2>\n  <form onSubmit={addEntry}>\n    <Newentry nameinput={newEntry.newName} numberinput={newEntry.newNumber} namehandler={handleNameChange} numhandler={handleNumberChange}/>\n  </form>\n  <h2>Numbers</h2>\n  <Phonebooklist list={persons} handleDeletion={handleDeletion} searchFilter={searchFilter}/>\n</div>\n)\n}\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}