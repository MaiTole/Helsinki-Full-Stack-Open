{"ast":null,"code":"var _jsxFileName = \"/Users/maithilitole/hsfo-part1/part1-unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  allClicks,\n  text,\n  statsent\n}) => {\n  if (allClicks === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: statsent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst Statistic = ({\n  good,\n  bad,\n  neutral,\n  all,\n  avg,\n  pos\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"Good\",\n        statsent: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"Bad \",\n        statsent: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"Neutral \",\n        statsent: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"All \",\n        statsent: all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"Average \",\n        statsent: avg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"Positive \",\n        statsent: pos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState({\n    gdclicks: 0,\n    gdpts: 0\n  });\n  const [neutral, setNeutral] = useState({\n    neutclicks: 0,\n    neutpts: 0\n  });\n  const [bad, setBad] = useState({\n    badclicks: 0,\n    badpts: 0\n  });\n\n  const Button = ({\n    handleClick,\n    text\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const handleGoodClick = () => setGood({\n    gdclicks: good.gdclicks + 1,\n    gdpts: good.gdpts + 1\n  });\n\n  const handleBadClick = () => setBad({\n    badclicks: bad.badclicks + 1,\n    badpts: bad.badpts - 1\n  });\n\n  const handleNeutClick = () => setNeutral({\n    neutclicks: neutral.neutclicks + 1,\n    neutpts: neutral.neutpts - 0\n  });\n\n  const averageClick = (good.gdpts + bad.badpts + neutral.neutpts) / 3;\n  const positiveClick = good.gdclicks * 100 / (good.gdclicks + bad.badclicks + neutral.neutclicks) + '%';\n  const allClicks = good.gdclicks + bad.badclicks + neutral.neutclicks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutClick,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      good: good.gdclicks,\n      bad: bad.badclicks,\n      neutral: neutral.neutclicks,\n      all: allClicks,\n      avg: averageClick,\n      pos: positiveClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dwZEwBNmbZtZjkiPayJi3oSCWu4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/maithilitole/hsfo-part1/part1-unicafe/src/App.js"],"names":["React","useState","Statistics","allClicks","text","statsent","Statistic","good","bad","neutral","all","avg","pos","App","setGood","gdclicks","gdpts","setNeutral","neutclicks","neutpts","setBad","badclicks","badpts","Button","handleClick","handleGoodClick","handleBadClick","handleNeutClick","averageClick","positiveClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAClD,MAAIF,SAAS,KAAK,CAAlB,EAAqB;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,2BACI;AAAA,8BACE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eACiB;AAAA;AAAA;AAAA;AAAA,cADjB,eAEE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD;;KAAMH,U;;AAkBN,MAAMI,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,GAAP;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,GAA1B;AAA+BC,EAAAA;AAA/B,CAAD,KAAyC;AACzD,sBACA;AAAA,2BACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,MAAnB;AAA0B,QAAA,QAAQ,EAAIL;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,MAAnB;AAA0B,QAAA,QAAQ,EAAIC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,UAAnB;AAA8B,QAAA,QAAQ,EAAIC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,MAAnB;AAA0B,QAAA,QAAQ,EAAIC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,UAAnB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,UAAD;AAAY,QAAA,IAAI,EAAG,WAAnB;AAA+B,QAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAYD,CAbD;;MAAMN,S;;AAgBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBb,QAAQ,CAAC;AAACc,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAD,CAAhC;AACA,QAAM,CAACP,OAAD,EAAUQ,UAAV,IAAwBhB,QAAQ,CAAC;AAACiB,IAAAA,UAAU,EAAE,CAAb;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAAtC;AACA,QAAM,CAACX,GAAD,EAAMY,MAAN,IAAgBnB,QAAQ,CAAC;AAACoB,IAAAA,SAAS,EAAE,CAAZ;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAD,CAA9B;;AAEA,QAAMC,MAAM,GAAG,CAAC;AAACC,IAAAA,WAAD;AAAcpB,IAAAA;AAAd,GAAD,kBACb;AAAQ,IAAA,OAAO,EAAIoB,WAAnB;AAAA,cAAiCpB;AAAjC;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,QAAMqB,eAAe,GAAG,MAAMX,OAAO,CAAC;AAACC,IAAAA,QAAQ,EAAER,IAAI,CAACQ,QAAL,GAAgB,CAA3B;AAA8BC,IAAAA,KAAK,EAAET,IAAI,CAACS,KAAL,GAAa;AAAlD,GAAD,CAArC;;AACA,QAAMU,cAAc,GAAG,MAAMN,MAAM,CAAC;AAACC,IAAAA,SAAS,EAAEb,GAAG,CAACa,SAAJ,GAAgB,CAA5B;AAA+BC,IAAAA,MAAM,EAAEd,GAAG,CAACc,MAAJ,GAAa;AAApD,GAAD,CAAnC;;AACA,QAAMK,eAAe,GAAG,MAAMV,UAAU,CAAC;AAACC,IAAAA,UAAU,EAAET,OAAO,CAACS,UAAR,GAAqB,CAAlC;AAAqCC,IAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,GAAkB;AAAhE,GAAD,CAAxC;;AACA,QAAMS,YAAY,GAAG,CAACrB,IAAI,CAACS,KAAL,GAAWR,GAAG,CAACc,MAAf,GAAsBb,OAAO,CAACU,OAA/B,IAAwC,CAA7D;AACA,QAAMU,aAAa,GAAGtB,IAAI,CAACQ,QAAL,GAAc,GAAd,IAAmBR,IAAI,CAACQ,QAAL,GAAcP,GAAG,CAACa,SAAlB,GAA4BZ,OAAO,CAACS,UAAvD,IAAqE,GAA3F;AACA,QAAMf,SAAS,GAAGI,IAAI,CAACQ,QAAL,GAAcP,GAAG,CAACa,SAAlB,GAA4BZ,OAAO,CAACS,UAAtD;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEO,eAArB;AAAsC,MAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEE,eAArB;AAAsC,MAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAED,cAArB;AAAqC,MAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEnB,IAAI,CAACQ,QAAtB;AAAgC,MAAA,GAAG,EAAEP,GAAG,CAACa,SAAzC;AAAoD,MAAA,OAAO,EAAEZ,OAAO,CAACS,UAArE;AAAiF,MAAA,GAAG,EAAEf,SAAtF;AAAiG,MAAA,GAAG,EAAEyB,YAAtG;AAAoH,MAAA,GAAG,EAAEC;AAAzH;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD;;GAAMhB,G;;MAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Statistics = ({allClicks, text, statsent}) => {\n  if (allClicks === 0) {\n    return (\n      <div>\n        No feedback available\n      </div>\n    )\n  }\n  return (\n    <div>\n        <tr>\n          <th>{text}</th><br/>\n          <td>{statsent}</td>\n        </tr>\n    </div>\n  ) \n}\n\nconst Statistic = ({good, bad, neutral, all, avg, pos}) => {\n  return (\n  <div>\n    <table>\n      <Statistics text = 'Good' statsent = {good} />\n      <Statistics text = 'Bad ' statsent = {bad} /> \n      <Statistics text = 'Neutral ' statsent = {neutral} />\n      <Statistics text = 'All ' statsent = {all} />\n      <Statistics text = 'Average ' statsent={avg} />\n      <Statistics text = 'Positive ' statsent={pos}/>\n    </table>\n  </div>\n  )\n}\n\n\nconst App = () => {\n\n  const [good, setGood] = useState({gdclicks: 0, gdpts: 0})\n  const [neutral, setNeutral] = useState({neutclicks: 0, neutpts: 0})\n  const [bad, setBad] = useState({badclicks: 0, badpts: 0})\n\n  const Button = ({handleClick, text}) => (\n    <button onClick = {handleClick}>{text}</button>\n  )\n\n  const handleGoodClick = () => setGood({gdclicks: good.gdclicks + 1, gdpts: good.gdpts + 1})\n  const handleBadClick = () => setBad({badclicks: bad.badclicks + 1, badpts: bad.badpts - 1})\n  const handleNeutClick = () => setNeutral({neutclicks: neutral.neutclicks + 1, neutpts: neutral.neutpts - 0})\n  const averageClick = (good.gdpts+bad.badpts+neutral.neutpts)/3\n  const positiveClick = good.gdclicks*100/(good.gdclicks+bad.badclicks+neutral.neutclicks) + '%'\n  const allClicks = good.gdclicks+bad.badclicks+neutral.neutclicks\n  \n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button handleClick={handleGoodClick} text='Good' />        \n      <Button handleClick={handleNeutClick} text='Neutral' />        \n      <Button handleClick={handleBadClick} text='Bad' />        \n      <br />\n      <h1>Statistics</h1>\n      <Statistic good={good.gdclicks} bad={bad.badclicks} neutral={neutral.neutclicks} all={allClicks} avg={averageClick} pos={positiveClick} />\n      <table>\n      \n      </table>\n    </div>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}