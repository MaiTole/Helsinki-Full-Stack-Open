{"ast":null,"code":"var _jsxFileName = \"/Users/maithilitole/hsfo-part1/part1-unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  Statistics\n}) => {\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: statistics[0].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: statistic[0].statsent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState({\n    gdclicks: 0,\n    gdpts: 0\n  });\n  const [neutral, setNeutral] = useState({\n    neutclicks: 0,\n    neutpts: 0\n  });\n  const [bad, setBad] = useState({\n    badclicks: 0,\n    badpts: 0\n  });\n\n  const Button = ({\n    handleClick,\n    text\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  const stats = [[all = {\n    allClicks\n  }, text = 'Good', statsent = good.gdclicks], [all = {\n    allClicks\n  }, text = 'Neutral', statsent = neutral.neutclicks], [all = {\n    allClicks\n  }, text = 'Bad', statsent = bad.badclicks], [all = {\n    allClicks\n  }, text = 'All', statsent = allClicks], [all = {\n    allClicks\n  }, text = 'Average', statsent = averageClick], [all = {\n    allClicks\n  }, text = 'Positive', statsent = positiveClick]];\n\n  const handleGoodClick = () => setGood({\n    gdclicks: good.gdclicks + 1,\n    gdpts: good.gdpts + 1\n  });\n\n  const handleBadClick = () => setBad({\n    badclicks: bad.badclicks + 1,\n    badpts: bad.badpts - 1\n  });\n\n  const handleNeutClick = () => setNeutral({\n    neutclicks: neutral.neutclicks + 1,\n    neutpts: neutral.neutpts - 0\n  });\n\n  const averageClick = (good.gdpts + bad.badpts + neutral.neutpts) / 3;\n  const positiveClick = good.gdclicks * 100 / (good.gdclicks + bad.badclicks + neutral.neutclicks) + '%';\n  const allClicks = good.gdclicks + bad.badclicks + neutral.neutclicks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutClick,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      statistics: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}; //<Statistics all = {allClicks} text = 'Good' statsent = {good.gdclicks} /> \n//<Statistics all = {allClicks} text = 'Bad' statsent = {bad.badclicks} /> \n//<Statistics all = {allClicks} text = 'Neutral' statsent = {neutral.neutclicks} />\n//<Statistics all = {allClicks} text = 'All' statsent = {allClicks} />\n//<Statistics all = {allClicks} text = 'Average' statsent={averageClick} />\n//<Statistics all = {allClicks} text = 'Positive' statsent={positiveClick}/>\n\n\n_s(App, \"dwZEwBNmbZtZjkiPayJi3oSCWu4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maithilitole/hsfo-part1/part1-unicafe/src/App.js"],"names":["React","useState","Statistics","all","statistics","text","statistic","statsent","App","good","setGood","gdclicks","gdpts","neutral","setNeutral","neutclicks","neutpts","bad","setBad","badclicks","badpts","Button","handleClick","stats","allClicks","averageClick","positiveClick","handleGoodClick","handleBadClick","handleNeutClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Statistics = ({Statistics}) => {\n  if (all === 0) {\n    return (\n      <div>\n        No feedback available\n      </div>\n    )\n  }\n  return (\n    <div>\n        <tr>\n          <th>{statistics[0].text}</th>\n          <td>{statistic[0].statsent}</td>\n        </tr>\n    </div>\n  ) \n}\n\nconst App = () => {\n\n  const [good, setGood] = useState({gdclicks: 0, gdpts: 0})\n  const [neutral, setNeutral] = useState({neutclicks: 0, neutpts: 0})\n  const [bad, setBad] = useState({badclicks: 0, badpts: 0})\n\n  const Button = ({handleClick, text}) => (\n    <button onClick = {handleClick}>{text}</button>\n  )\n\n  const stats = [\n    [all = {allClicks}, text='Good', statsent = good.gdclicks],\n    [all = {allClicks}, text='Neutral', statsent = neutral.neutclicks],\n    [all = {allClicks}, text='Bad', statsent = bad.badclicks],\n    [all = {allClicks}, text='All', statsent = allClicks],\n    [all = {allClicks}, text='Average', statsent = averageClick],\n    [all = {allClicks}, text='Positive', statsent = positiveClick]\n  ]\n\n  const handleGoodClick = () => setGood({gdclicks: good.gdclicks + 1, gdpts: good.gdpts + 1})\n  const handleBadClick = () => setBad({badclicks: bad.badclicks + 1, badpts: bad.badpts - 1})\n  const handleNeutClick = () => setNeutral({neutclicks: neutral.neutclicks + 1, neutpts: neutral.neutpts - 0})\n  const averageClick = (good.gdpts+bad.badpts+neutral.neutpts)/3\n  const positiveClick = good.gdclicks*100/(good.gdclicks+bad.badclicks+neutral.neutclicks) + '%'\n  const allClicks = good.gdclicks+bad.badclicks+neutral.neutclicks\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button handleClick={handleGoodClick} text='Good' />        \n      <Button handleClick={handleNeutClick} text='Neutral' />        \n      <Button handleClick={handleBadClick} text='Bad' />        \n      <br />\n      <h1>Statistics</h1>\n      <Statistics statistics={statistics} />\n      <table>\n      \n      </table>\n    </div>\n)\n}\n\n      //<Statistics all = {allClicks} text = 'Good' statsent = {good.gdclicks} /> \n      //<Statistics all = {allClicks} text = 'Bad' statsent = {bad.badclicks} /> \n      //<Statistics all = {allClicks} text = 'Neutral' statsent = {neutral.neutclicks} />\n      //<Statistics all = {allClicks} text = 'All' statsent = {allClicks} />\n      //<Statistics all = {allClicks} text = 'Average' statsent={averageClick} />\n      //<Statistics all = {allClicks} text = 'Positive' statsent={positiveClick}/>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}