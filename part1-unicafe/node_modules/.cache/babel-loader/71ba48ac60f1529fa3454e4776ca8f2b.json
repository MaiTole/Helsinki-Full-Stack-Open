{"ast":null,"code":"var _jsxFileName = \"/Users/maithilitole/part1-unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Average \", props.average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Positive \", props.positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState({\n    gdclicks: 0,\n    gdpts: 0\n  });\n  const [neutral, setNeutral] = useState({\n    neutclicks: 0,\n    neutpts: 0\n  });\n  const [bad, setBad] = useState({\n    badclicks: 0,\n    badpts: 0\n  });\n\n  const handleGoodClick = () => setGood({\n    gdclicks: good.gdclicks + 1,\n    gdpts: good.gdpts + 1\n  });\n\n  const handleBadClick = () => setBad({\n    badclicks: bad.badclicks + 1,\n    badpts: bad.badpts - 1\n  });\n\n  const handleNeutClick = () => setNeutral({\n    neutclicks: neutral.neutclicks + 1,\n    neutpts: neutral.neutpts - 0\n  });\n\n  const averageClick = (good.gdpts + bad.badpts + neutral.neutpts) / 3;\n  const positiveClick = good.gdclicks * 100 / (good.gdclicks + bad.badclicks + neutral.neutclicks);\n  const allClicks = good.gdclicks + bad.badclicks + neutral.neutclicks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutClick,\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadClick,\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good \", good.gdclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral \", neutral.neutclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad \", bad.badclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All \", good.gdclicks + bad.badclicks + neutral.neutclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average\", /*#__PURE__*/_jsxDEV(Statistics, {\n        all: allClicks,\n        average: averageClick,\n        positive: positiveClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive\", /*#__PURE__*/_jsxDEV(Statistics, {\n        all: allClicks,\n        positive: positiveClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dwZEwBNmbZtZjkiPayJi3oSCWu4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maithilitole/part1-unicafe/src/App.js"],"names":["React","useState","Statistics","props","all","average","positive","App","good","setGood","gdclicks","gdpts","neutral","setNeutral","neutclicks","neutpts","bad","setBad","badclicks","badpts","handleGoodClick","handleBadClick","handleNeutClick","averageClick","positiveClick","allClicks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Statistics = (props) => {\n  if (props.all === 0) {\n    return (\n      <div>\n        No feedback available\n      </div>\n    )\n  }\n  return (\n    <div>\n      <p1>Average {props.average}</p1>\n      <p1>Positive {props.positive} %</p1>\n    </div>\n  ) \n}\n\nconst App = () => {\n\n  const [good, setGood] = useState({gdclicks: 0, gdpts: 0})\n  const [neutral, setNeutral] = useState({neutclicks: 0, neutpts: 0})\n  const [bad, setBad] = useState({badclicks: 0, badpts: 0})\n\n  const handleGoodClick = () => setGood({gdclicks: good.gdclicks + 1, gdpts: good.gdpts + 1})\n  const handleBadClick = () => setBad({badclicks: bad.badclicks + 1, badpts: bad.badpts - 1})\n  const handleNeutClick = () => setNeutral({neutclicks: neutral.neutclicks + 1, neutpts: neutral.neutpts - 0})\n  const averageClick = (good.gdpts+bad.badpts+neutral.neutpts)/3\n  const positiveClick = good.gdclicks*100/(good.gdclicks+bad.badclicks+neutral.neutclicks)\n  const allClicks = good.gdclicks+bad.badclicks+neutral.neutclicks\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <button onClick={handleGoodClick}>Good</button>        \n      <button onClick={handleNeutClick}>Neutral</button>\n      <button onClick={handleBadClick}>Bad</button>\n      <br />\n      <h1>Statistics</h1>\n      <p>Good {good.gdclicks}</p>\n      <p>Neutral {neutral.neutclicks}</p>\n      <p>Bad {bad.badclicks}</p>\n      <p>All {good.gdclicks+bad.badclicks+neutral.neutclicks}</p>\n      <p>Average<Statistics all = {allClicks} average={averageClick} positive={positiveClick}/></p>\n      <p>Positive<Statistics all = {allClicks} positive={positiveClick}/>%</p>\n\n\n    </div>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}