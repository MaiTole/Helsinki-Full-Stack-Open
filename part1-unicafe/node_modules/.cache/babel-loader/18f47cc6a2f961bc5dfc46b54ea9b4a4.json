{"ast":null,"code":"var _jsxFileName = \"/Users/maithilitole/part1-unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Good \", props.gdclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Neutral \", props.neutclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Bad \", props.badclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"All \", props.allclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Average \", props.average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: [\"Positive \", props.positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState({\n    gdclicks: 0,\n    gdpts: 0\n  });\n  const [neutral, setNeutral] = useState({\n    neutclicks: 0,\n    neutpts: 0\n  });\n  const [bad, setBad] = useState({\n    badclicks: 0,\n    badpts: 0\n  });\n\n  const handleGoodClick = () => setGood({\n    gdclicks: good.gdclicks + 1,\n    gdpts: good.gdpts + 1\n  });\n\n  const handleBadClick = () => setBad({\n    badclicks: bad.badclicks + 1,\n    badpts: bad.badpts - 1\n  });\n\n  const handleNeutClick = () => setNeutral({\n    neutclicks: neutral.neutclicks + 1,\n    neutpts: neutral.neutpts - 0\n  });\n\n  const averageClick = (good.gdpts + bad.badpts + neutral.neutpts) / 3;\n  const positiveClick = good.gdclicks * 100 / (good.gdclicks + bad.badclicks + neutral.neutclicks);\n  const allClicks = good.gdclicks + bad.badclicks + neutral.neutclicks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutClick,\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadClick,\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All \", good.gdclicks + bad.badclicks + neutral.neutclicks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      gdclicks: good.gdclicks,\n      badclicks: bad.badclicks,\n      neutclicks: neutclicks,\n      all: allClicks,\n      average: averageClick,\n      positive: positiveClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dwZEwBNmbZtZjkiPayJi3oSCWu4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/maithilitole/part1-unicafe/src/App.js"],"names":["React","useState","Statistics","props","all","gdclicks","neutclicks","badclicks","allclicks","average","positive","App","good","setGood","gdpts","neutral","setNeutral","neutpts","bad","setBad","badpts","handleGoodClick","handleBadClick","handleNeutClick","averageClick","positiveClick","allClicks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAIA,KAAK,CAACC,GAAN,KAAc,CAAlB,EAAqB;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACE;AAAA,0BAAUD,KAAK,CAACE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAaF,KAAK,CAACG,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAASH,KAAK,CAACI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAASJ,KAAK,CAACK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BAAaL,KAAK,CAACM,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAKkC;AAAA;AAAA;AAAA;AAAA,YALlC,eAME;AAAA,8BAAcN,KAAK,CAACO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlBD;;KAAMR,U;;AAoBN,MAAMS,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAACI,IAAAA,QAAQ,EAAE,CAAX;AAAcS,IAAAA,KAAK,EAAE;AAArB,GAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC;AAACK,IAAAA,UAAU,EAAE,CAAb;AAAgBW,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAAtC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC;AAACM,IAAAA,SAAS,EAAE,CAAZ;AAAea,IAAAA,MAAM,EAAE;AAAvB,GAAD,CAA9B;;AAEA,QAAMC,eAAe,GAAG,MAAMR,OAAO,CAAC;AAACR,IAAAA,QAAQ,EAAEO,IAAI,CAACP,QAAL,GAAgB,CAA3B;AAA8BS,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAAL,GAAa;AAAlD,GAAD,CAArC;;AACA,QAAMQ,cAAc,GAAG,MAAMH,MAAM,CAAC;AAACZ,IAAAA,SAAS,EAAEW,GAAG,CAACX,SAAJ,GAAgB,CAA5B;AAA+Ba,IAAAA,MAAM,EAAEF,GAAG,CAACE,MAAJ,GAAa;AAApD,GAAD,CAAnC;;AACA,QAAMG,eAAe,GAAG,MAAMP,UAAU,CAAC;AAACV,IAAAA,UAAU,EAAES,OAAO,CAACT,UAAR,GAAqB,CAAlC;AAAqCW,IAAAA,OAAO,EAAEF,OAAO,CAACE,OAAR,GAAkB;AAAhE,GAAD,CAAxC;;AACA,QAAMO,YAAY,GAAG,CAACZ,IAAI,CAACE,KAAL,GAAWI,GAAG,CAACE,MAAf,GAAsBL,OAAO,CAACE,OAA/B,IAAwC,CAA7D;AACA,QAAMQ,aAAa,GAAGb,IAAI,CAACP,QAAL,GAAc,GAAd,IAAmBO,IAAI,CAACP,QAAL,GAAca,GAAG,CAACX,SAAlB,GAA4BQ,OAAO,CAACT,UAAvD,CAAtB;AACA,QAAMoB,SAAS,GAAGd,IAAI,CAACP,QAAL,GAAca,GAAG,CAACX,SAAlB,GAA4BQ,OAAO,CAACT,UAAtD;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEe,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,yBAAQV,IAAI,CAACP,QAAL,GAAca,GAAG,CAACX,SAAlB,GAA4BQ,OAAO,CAACT,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM,IAAI,CAACP,QAA3B;AAAqC,MAAA,SAAS,EAAEa,GAAG,CAACX,SAApD;AAA+D,MAAA,UAAU,EAAID,UAA7E;AAAyF,MAAA,GAAG,EAAIoB,SAAhG;AAA2G,MAAA,OAAO,EAAEF,YAApH;AAAkI,MAAA,QAAQ,EAAEC;AAA5I;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;GAAMd,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Statistics = (props) => {\n  if (props.all === 0) {\n    return (\n      <div>\n        No feedback available\n      </div>\n    )\n  }\n  return (\n    <div>\n      <p1>Good {props.gdclicks}</p1>\n      <p1>Neutral {props.neutclicks}</p1>\n      <p1>Bad {props.badclicks}</p1>\n      <p1>All {props.allclicks}</p1>\n      <p1>Average {props.average}</p1><br />\n      <p1>Positive {props.positive} %</p1>\n    </div>\n  ) \n}\n\nconst App = () => {\n\n  const [good, setGood] = useState({gdclicks: 0, gdpts: 0})\n  const [neutral, setNeutral] = useState({neutclicks: 0, neutpts: 0})\n  const [bad, setBad] = useState({badclicks: 0, badpts: 0})\n\n  const handleGoodClick = () => setGood({gdclicks: good.gdclicks + 1, gdpts: good.gdpts + 1})\n  const handleBadClick = () => setBad({badclicks: bad.badclicks + 1, badpts: bad.badpts - 1})\n  const handleNeutClick = () => setNeutral({neutclicks: neutral.neutclicks + 1, neutpts: neutral.neutpts - 0})\n  const averageClick = (good.gdpts+bad.badpts+neutral.neutpts)/3\n  const positiveClick = good.gdclicks*100/(good.gdclicks+bad.badclicks+neutral.neutclicks)\n  const allClicks = good.gdclicks+bad.badclicks+neutral.neutclicks\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <button onClick={handleGoodClick}>Good</button>        \n      <button onClick={handleNeutClick}>Neutral</button>\n      <button onClick={handleBadClick}>Bad</button>\n      <br />\n      <h1>Statistics</h1>\n      <p>All {good.gdclicks+bad.badclicks+neutral.neutclicks}</p>\n      <Statistics gdclicks={good.gdclicks} badclicks={bad.badclicks} neutclicks = {neutclicks} all = {allClicks} average={averageClick} positive={positiveClick}/>\n\n\n    </div>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}